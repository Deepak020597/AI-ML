number_square_list = [(x, x**2) for x in range(1, 11)]
print("Task 1:", number_square_list)

list1 = [1, 2, 3, 4, 5]
list2 = [4, 5, 6, 7, 8]
common_elements = set(list1).intersection(list2)
print("Task 2:", common_elements)

students_scores = {
    'Deepak': 99,
    'sai': 92,
    'aditya': 87,
    'fayaz': 78,
    'vasuki': 90
}
highest_score_student = max(students_scores, key=students_scores.get)
print("Task 3:", highest_score_student)

matrix = [
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9]
]
transpose_matrix = [[row[i] for row in matrix] for i in range(len(matrix[0]))]
print("Task 4:", transpose_matrix)

numbers = [10, -1, 0, 5, -3, 0, 8, -2]
positive_count = sum(1 for x in numbers if x > 0)
negative_count = sum(1 for x in numbers if x < 0)
zero_count = sum(1 for x in numbers if x == 0)
print("Task 5: Positive:", positive_count, "Negative:", negative_count, "Zero:", zero_count)

def cube_numbers(numbers):
    return [x**3 for x in numbers]

numbers = [1, 2, 3, 4, 5]
print("Task 6:", cube_numbers(numbers))

people = [('Deepak', 30), ('sai', 25), ('aditya', 35)]
sorted_people = sorted(people, key=lambda x: x[1])
print("Task 7:", sorted_people)

def highest_score_student(students):
    return max(students, key=lambda x: x['score'])['name']

students = [
    {'name': 'Deepak', 'score': 99},
    {'name': 'sai', 'score': 92},
    {'name': 'aditya', 'score': 87}
]
print("Task 8:", highest_score_student(students))